datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  id          String   @id @default(cuid())
  firstName   String
  lastName    String
  number      Int
  position    Position
  birthDate   DateTime
  nationality String
  teamId      String?
  team        Team?    @relation(fields: [teamId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Team {
  id        String   @id @default(cuid())
  name      String
  logo      String?
  city      String
  players   Player[]
  matches   Match[]  @relation("HomeTeam")
  awayMatches Match[] @relation("AwayTeam")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Match {
  id          String    @id @default(cuid())
  date        DateTime
  homeTeamId  String
  awayTeamId  String
  homeTeam    Team      @relation("HomeTeam", fields: [homeTeamId], references: [id])
  awayTeam    Team      @relation("AwayTeam", fields: [awayTeamId], references: [id])
  homeScore   Int?
  awayScore   Int?
  competitionId String
  competition Competition @relation(fields: [competitionId], references: [id])
  refereeId   String
  referee     Referee   @relation(fields: [refereeId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Competition {
  id        String   @id @default(cuid())
  name      String
  season    String
  type      CompetitionType
  matches   Match[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Referee {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  level     Int
  matches   Match[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  MANAGER
}

enum Position {
  GOALKEEPER
  DEFENDER
  MIDFIELDER
  FORWARD
}

enum CompetitionType {
  LEAGUE
  CUP
  FRIENDLY
} 